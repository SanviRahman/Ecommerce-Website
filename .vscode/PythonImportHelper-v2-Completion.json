[
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "get_user_model",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "UserRegistrationSerializer",
        "importPath": "core.apps.users.serializers",
        "description": "core.apps.users.serializers",
        "isExtraImport": true,
        "detail": "core.apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "UserDetailSerializer",
        "importPath": "core.apps.users.serializers",
        "description": "core.apps.users.serializers",
        "isExtraImport": true,
        "detail": "core.apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "PhoneTokenObtainPairSerializer",
        "importPath": "core.apps.users.serializers",
        "description": "core.apps.users.serializers",
        "isExtraImport": true,
        "detail": "core.apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "CustomTokenRefreshSerializer",
        "importPath": "core.apps.users.serializers",
        "description": "core.apps.users.serializers",
        "isExtraImport": true,
        "detail": "core.apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "CustomUserManager",
        "importPath": "core.apps.users.models",
        "description": "core.apps.users.models",
        "isExtraImport": true,
        "detail": "core.apps.users.models",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "uuid",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "uuid",
        "description": "uuid",
        "detail": "uuid",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "datetime",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "datetime",
        "description": "datetime",
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "AbstractUser",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "BaseUserManager",
        "importPath": "django.contrib.auth.base_user",
        "description": "django.contrib.auth.base_user",
        "isExtraImport": true,
        "detail": "django.contrib.auth.base_user",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "TokenRefreshSerializer",
        "importPath": "rest_framework_simplejwt.serializers",
        "description": "rest_framework_simplejwt.serializers",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.serializers",
        "documentation": {}
    },
    {
        "label": "timezone",
        "importPath": "django.utils",
        "description": "django.utils",
        "isExtraImport": true,
        "detail": "django.utils",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "UserRegistrationView",
        "kind": 6,
        "importPath": "core.api.v1.users.views",
        "description": "core.api.v1.users.views",
        "peekOfCode": "class UserRegistrationView(generics.CreateAPIView):\n    queryset = User.objects.all()\n    serializer_class = UserRegistrationSerializer\nclass UserDetailView(generics.RetrieveAPIView):\n    serializer_class = UserDetailSerializer\n    permission_classes = [permissions.IsAuthenticated]\n    def get_object(self):\n        return self.request.user\nclass PhoneTokenObtainPairView(TokenObtainPairView):\n    serializer_class = PhoneTokenObtainPairSerializer",
        "detail": "core.api.v1.users.views",
        "documentation": {}
    },
    {
        "label": "UserDetailView",
        "kind": 6,
        "importPath": "core.api.v1.users.views",
        "description": "core.api.v1.users.views",
        "peekOfCode": "class UserDetailView(generics.RetrieveAPIView):\n    serializer_class = UserDetailSerializer\n    permission_classes = [permissions.IsAuthenticated]\n    def get_object(self):\n        return self.request.user\nclass PhoneTokenObtainPairView(TokenObtainPairView):\n    serializer_class = PhoneTokenObtainPairSerializer\nclass CustomTokenRefreshView(TokenRefreshView):\n    serializer_class = CustomTokenRefreshSerializer",
        "detail": "core.api.v1.users.views",
        "documentation": {}
    },
    {
        "label": "PhoneTokenObtainPairView",
        "kind": 6,
        "importPath": "core.api.v1.users.views",
        "description": "core.api.v1.users.views",
        "peekOfCode": "class PhoneTokenObtainPairView(TokenObtainPairView):\n    serializer_class = PhoneTokenObtainPairSerializer\nclass CustomTokenRefreshView(TokenRefreshView):\n    serializer_class = CustomTokenRefreshSerializer",
        "detail": "core.api.v1.users.views",
        "documentation": {}
    },
    {
        "label": "CustomTokenRefreshView",
        "kind": 6,
        "importPath": "core.api.v1.users.views",
        "description": "core.api.v1.users.views",
        "peekOfCode": "class CustomTokenRefreshView(TokenRefreshView):\n    serializer_class = CustomTokenRefreshSerializer",
        "detail": "core.api.v1.users.views",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "core.api.v1.users.views",
        "description": "core.api.v1.users.views",
        "peekOfCode": "User = get_user_model()\nclass UserRegistrationView(generics.CreateAPIView):\n    queryset = User.objects.all()\n    serializer_class = UserRegistrationSerializer\nclass UserDetailView(generics.RetrieveAPIView):\n    serializer_class = UserDetailSerializer\n    permission_classes = [permissions.IsAuthenticated]\n    def get_object(self):\n        return self.request.user\nclass PhoneTokenObtainPairView(TokenObtainPairView):",
        "detail": "core.api.v1.users.views",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.api.urls",
        "description": "core.api.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n]",
        "detail": "core.api.urls",
        "documentation": {}
    },
    {
        "label": "CustomUserAdmin",
        "kind": 6,
        "importPath": "core.apps.users.admin",
        "description": "core.apps.users.admin",
        "peekOfCode": "class CustomUserAdmin(UserAdmin):\n    search_fields =(\"username\", \"email\", \"phone_number\")\n    list_filter=UserAdmin.list_filter\n    list_display=(\"phone_no\",\"username\", \"email\", \"first_name\", \"last_name\")\n    fieldsets = (\n        (None, {'fields': ('username', 'password')}),\n        ('Personal info', {'fields': ('email', 'phone_number')}),\n        ('Permissions', {'fields': ('is_active', 'is_staff', 'is_superuser', 'groups', 'user_permissions')}),\n        ('Important dates', {'fields': ('last_login', 'date_joined')}),\n    )",
        "detail": "core.apps.users.admin",
        "documentation": {}
    },
    {
        "label": "UsersConfig",
        "kind": 6,
        "importPath": "core.apps.users.apps",
        "description": "core.apps.users.apps",
        "peekOfCode": "class UsersConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'core.apps.users'",
        "detail": "core.apps.users.apps",
        "documentation": {}
    },
    {
        "label": "CustomUserManager",
        "kind": 6,
        "importPath": "core.apps.users.models",
        "description": "core.apps.users.models",
        "peekOfCode": "class CustomUserManager(BaseUserManager):\n    def create_user(self,username=None, password=None, email=None,**kwargs):\n        if not username:\n            username=uuid.uuid4().hex[:10]\n        email=self.normalize_email(email)\n        user=self.model(username=username,email=email,**kwargs)\n        user.set_password(password)\n        user.save()\n    def create_superuser(self, username, email=None,password=None, **kwargs):\n        kwargs.setdefault('is_staff', True)",
        "detail": "core.apps.users.models",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 6,
        "importPath": "core.apps.users.models",
        "description": "core.apps.users.models",
        "peekOfCode": "class User(AbstractUser):\n    phone_number =models.CharField(max_length=20,verbose_name='Phone Number',blank=True,null=True,db_index=True)\n    objects= CustomUserManager()\n    def __str__(self, *args, **kwargs):\n        if self.phone_number:\n            return self.phone_number\n        return self.username\n    def phone_no(self, *args, **kwargs):\n        if self.phone_number:\n            return self.phone_number",
        "detail": "core.apps.users.models",
        "documentation": {}
    },
    {
        "label": "UserRegistrationSerializer",
        "kind": 6,
        "importPath": "core.apps.users.serializers",
        "description": "core.apps.users.serializers",
        "peekOfCode": "class UserRegistrationSerializer(serializers.ModelSerializer):\n    password = serializers.CharField(write_only=True)\n    password2 = serializers.CharField(write_only=True)\n    class Meta:\n        model = User\n        fields = ('phone_number', 'password', 'password2', 'first_name', 'last_name')\n    def validate_phone_number(self, value):\n        if User.objects.filter(phone_number=value).exists():\n            raise serializers.ValidationError(\"A user with this phone number already exists.\")\n        return value",
        "detail": "core.apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "User",
        "kind": 5,
        "importPath": "core.apps.users.serializers",
        "description": "core.apps.users.serializers",
        "peekOfCode": "User = get_user_model()\nclass UserRegistrationSerializer(serializers.ModelSerializer):\n    password = serializers.CharField(write_only=True)\n    password2 = serializers.CharField(write_only=True)\n    class Meta:\n        model = User\n        fields = ('phone_number', 'password', 'password2', 'first_name', 'last_name')\n    def validate_phone_number(self, value):\n        if User.objects.filter(phone_number=value).exists():\n            raise serializers.ValidationError(\"A user with this phone number already exists.\")",
        "detail": "core.apps.users.serializers",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.ostad.asgi",
        "description": "core.ostad.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.ostad.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-wm%grh4@t151^#gcstq8d#@1745c-=xlj0wr__i96&@1p+enfd'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-wm%grh4@t151^#gcstq8d#@1745c-=xlj0wr__i96&@1p+enfd'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # first party",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    # first party\n    'core.apps.users.apps.UsersConfig',\n]",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n]\nROOT_URLCONF = 'core.api.urls'",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "ROOT_URLCONF = 'core.api.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "WSGI_APPLICATION = 'core.ostad.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/4.2/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.sqlite3',\n        'NAME': BASE_DIR / 'db.sqlite3',\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nimport os\n# Base directory of the project\n#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Static files configuration",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nimport os\n# Base directory of the project\n#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Static files configuration\nSTATIC_URL = '/static/'  # URL to access static files",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nimport os\n# Base directory of the project\n#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Static files configuration\nSTATIC_URL = '/static/'  # URL to access static files\nSTATICFILES_DIRS = [",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/4.2/howto/static-files/\nimport os\n# Base directory of the project\n#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Static files configuration\nSTATIC_URL = '/static/'  # URL to access static files\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),  # Directory where static files are stored",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "#BASE_DIR",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))\n# Static files configuration\nSTATIC_URL = '/static/'  # URL to access static files\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),  # Directory where static files are stored\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Directory for collectstatic command\n# Media files configuration\nMEDIA_URL = '/media/'  # URL to access media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directory where media files are stored",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "STATIC_URL = '/static/'  # URL to access static files\nSTATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),  # Directory where static files are stored\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Directory for collectstatic command\n# Media files configuration\nMEDIA_URL = '/media/'  # URL to access media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directory where media files are stored\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    os.path.join(BASE_DIR, 'static'),  # Directory where static files are stored\n]\nSTATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Directory for collectstatic command\n# Media files configuration\nMEDIA_URL = '/media/'  # URL to access media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directory where media files are stored\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_ROOT",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')  # Directory for collectstatic command\n# Media files configuration\nMEDIA_URL = '/media/'  # URL to access media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directory where media files are stored\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "MEDIA_URL = '/media/'  # URL to access media files\nMEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directory where media files are stored\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')  # Directory where media files are stored\n# Default primary key field type\n# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\nAUTH_USER_MODEL = 'users.User'",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_USER_MODEL",
        "kind": 5,
        "importPath": "core.ostad.settings",
        "description": "core.ostad.settings",
        "peekOfCode": "AUTH_USER_MODEL = 'users.User'",
        "detail": "core.ostad.settings",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.ostad.wsgi",
        "description": "core.ostad.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.ostad.wsgi",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'core.ostad.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]